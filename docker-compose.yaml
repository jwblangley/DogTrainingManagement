services:
  database: &db
    profiles:
      - ''
    image: postgres
    volumes:
      - ./database/tables.sql:/docker-entrypoint-initdb.d/tables.sql:ro
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=dogtraining
      - PGDATA=/var/lib/postgresql/data


  database-dev:
    <<: *db
    profiles:
      - dev
    ports:
    - 5432:5432
    volumes:
      - ./database/tables.sql:/docker-entrypoint-initdb.d/0tables.sql:ro
      - ./database/dev-data.sql:/docker-entrypoint-initdb.d/1dev-data.sql:ro
      - db-dev-data:/var/lib/postgresql/data

  backend:
    profiles:
      - ''
    build:
      context: backend
    environment:
      # SSL
      SSL_CERT_PATH: "/dog_training_management_backend/public-certificate.crt"
      SSL_KEY_PATH: "/dog_training_management_backend/privatekey.key"
      # POSTGRES
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "changeme" # CHANGE
      POSTGRES_HOST: "database"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "dogtraining"
      # TEX
      BASE_STATEMENT_TEX: "/dog_training_management_backend/statement_base.tex"
    volumes:
      - ./backend/public-certificate.crt:/dog_training_management_backend/public-certificate.crt:ro
      - ./backend/privatekey.key:/dog_training_management_backend/privatekey.key:ro
      - ./backend/sample.tex:/dog_training_management_backend/statement_base.tex:ro
    depends_on:
      database:
        condition: service_started

  frontend:
    profiles:
      - ''
    build:
      context: frontend
    depends_on:
      backend:
        condition: service_started
    environment:
      VITE_BACKEND_ENDPOINT: "https://backend:8000"
      # SSL
      SSL_CERT_PATH: "/dog_training_management_frontend/public-certificate.crt"
      SSL_KEY_PATH: "/dog_training_management_frontend/privatekey.key"
    volumes:
      - ./frontend/public-certificate.crt:/dog_training_management_frontend/public-certificate.crt:ro
      - ./frontend/privatekey.key:/dog_training_management_frontend/privatekey.key:ro
    ports:
      - 443:443


volumes:
  db-data:
  db-dev-data:
